<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Now And Tomorrow</title>
  
  <subtitle>B站不再是“净土”</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-04T03:42:24.565Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>方鹏程</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo几个命令</title>
    <link href="http://yoursite.com/2019/12/01/hello-world/"/>
    <id>http://yoursite.com/2019/12/01/hello-world/</id>
    <published>2019-12-01T10:45:29.000Z</published>
    <updated>2019-05-04T03:42:24.565Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class
      
    
    </summary>
    
      <category term="博客" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>learngit</title>
    <link href="http://yoursite.com/2019/05/04/learngit/"/>
    <id>http://yoursite.com/2019/05/04/learngit/</id>
    <published>2019-05-04T15:37:00.000Z</published>
    <updated>2019-05-04T12:51:07.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="温习一下git"><a href="#温习一下git" class="headerlink" title="温习一下git"></a>温习一下git</h1><hr><h2 id="一、基本命令"><a href="#一、基本命令" class="headerlink" title="一、基本命令"></a>一、基本命令</h2><ol><li><p>git init<br>&nbsp;&nbsp;初始化仓库，在本地创建一个仓库，.git记载了版本等信息.</p></li><li><p>git add file<br>&nbsp;&nbsp;file就是要add的文件名，都是同样的做法，将文件放到暂存区（缓存区），然后一次性提交 git add file1; git add file2;git commit -m “一次性提交”</p></li><li><p>git commit -m “description”<br>&nbsp;&nbsp;-m一定要写，方便以后回退查看历史</p></li><li><p>git status  </p></li></ol><hr><p>&nbsp;&nbsp;查看仓库的目前状态。如果仓库来了个新人（创建一个文件），实习期，并没有转正，没交入职材料，没签合同，没录入公司员工管理系统。这时处于未跟踪状态。 </p><ul><li><img src="/2019/05/04/learngit/untracked.png" alt="未追踪" title="untracked"><br>&nbsp;&nbsp;当git add放到缓存中之后，意味通过实习期，开始跟踪了。此时看git status ,准备提交  </li><li><img src="/2019/05/04/learngit/AfterAddtobeCommited.PNG" alt="将提交暂存区" title="to be commited"><br>&nbsp;&nbsp;只要执行一次git add，就是通过实习期,后面 无论什么时候修改文件, git status ,是（not staged for commited）将提交暂存区（起点）</li><li><p><img src="/2019/05/04/learngit/preparedCommit.PNG" alt="将提交暂存区" title="not staged to commit"><br>总结：有两条路：<br>未跟踪和将提交缓存区本质是一个意思，未跟踪也是将要提交缓存区，然后变为跟踪</p><ol><li>untracked–&gt;to be commited  </li><li><p>not staged to commit(将提交暂存区) —&gt;to be commited</p></li><li><p>为什么有两个状态,因为git会 add –commit这一路认为add好后就提交,这只会有一个状态，如果中间有修改了，那么会有另一个状态。下面的图状态发生在git add之后，第一个状态就是默认会提交状态，<br>第二个状态是git add之后又修改了内容（缓存内容变了），所以又回到起点，这时只有先git add重新放回缓存里，<br><img src="/2019/05/04/learngit/why.PNG" alt="将提交暂存区" title="not staged to commit">   </p></li></ol></li></ul><hr><h2 id="其他重要命令"><a href="#其他重要命令" class="headerlink" title="其他重要命令"></a>其他重要命令</h2><ul><li>git diff查看不同 无论是新文件 git add 之后修改，还是老文件git add 之前 之后 。总之在未commted之前，都可以看到当前修改的内容和上个内容。无论提交还是修改都要git add放到缓存区，然后一次性提交。<strong><em>staged:暂存，not staged to commit:还没有提交暂存</em></strong><br><img src="/2019/05/04/learngit/git_diff.PNG" alt="将提交暂存区" title="not staged to commit"></li></ul><hr><ul><li>git reset –HEAD(这里的写法:HEAD^,HEAD^^,HEAD^^^,或者HEAD~100) HEAD^回退到上一个版本，HEAD^^回退到上上个版本……<br>回退之后工作区内容就彻底变了。</li><li>git log查看历史纪录，每个历史纪录在git中叫做commit,相当于快照<br><img src="/2019/05/04/learngit/gitlog.PNG" alt="将提交暂存区" title="not staged to commit">图片中的每条记录名称叫commit，后面是commit的id号，用来回退，之需要输入前几个，git自动识别后面的。Head就是当前版本，指针总是指向head,<br>开始回退：  </li><li>git reset –hard HEAD^ 回退到上一个版本。用git log查看历史纪录，回退之前的版本的记录就没有了。HEAD^这种写法只能回退，不能从过去返回到现在。这时需要commit id了。<br>git reset –hard commitid 只需要写前几位。<br>这个commitid因为查看不到历史纪录，只能用另一个命令</li><li>git reflog查看命令历史，以便确定要回到未来的哪个版本。<br>git log可以查看提交历史,只能看到当前版本之前的历史纪录，以便确定要回退到哪个版本。</li></ul><p><strong><em>不管处在什么阶段 ，只要git reset 都直接回退到那个版本，工作区处于无状态即git status查看只会看到nothing to commit, working tree clean</em></strong></p><p>无论git log ,git reflog查看历史纪录，每个版本动作操作都记录下了，包括回退。从上到下是最近操作到过去操作</p><h2 id><a href="#" class="headerlink" title></a><img src="/2019/05/04/learngit/reflog_log.PNG" alt="历史纪录" title="log_flog"></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;温习一下git&quot;&gt;&lt;a href=&quot;#温习一下git&quot; class=&quot;headerlink&quot; title=&quot;温习一下git&quot;&gt;&lt;/a&gt;温习一下git&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;一、基本命令&quot;&gt;&lt;a href=&quot;#一、基本命令&quot; class=&quot;headerl
      
    
    </summary>
    
    
  </entry>
  
</feed>
